Release "gitea" does not exist. Installing it now.
NAME: gitea
LAST DEPLOYED: Sat Apr  4 20:21:29 2020
NAMESPACE: data-db
STATUS: pending-install
REVISION: 1
HOOKS:
---
# Source: gitea/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "gitea-test-connection"
  labels:
    helm.sh/chart: gitea-0.1.0
    app.kubernetes.io/name: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/version: "1.11.4"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['gitea:3000']
  restartPolicy: Never
MANIFEST:
---
# Source: gitea/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitea
  labels:
    helm.sh/chart: gitea-0.1.0
    app.kubernetes.io/name: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/version: "1.11.4"
    app.kubernetes.io/managed-by: Helm
---
# Source: gitea/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: gitea
  labels:
    app: "gitea"
    chart: "gitea-0.1.0"
    release: "gitea"
    heritage: "Helm"
type: Opaque
data:
  db-user: "Z2l0ZWE="
  db-password: "V3BJJkYqM2ZuN05Dbzh2WGdLV3Q="
---
# Source: gitea/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: gitea
  labels:
    helm.sh/chart: gitea-0.1.0
    app.kubernetes.io/name: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/version: "1.11.4"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: gitea
    app.kubernetes.io/instance: gitea
---
# Source: gitea/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: gitea
  labels:
    helm.sh/chart: gitea-0.1.0
    app.kubernetes.io/name: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/version: "1.11.4"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  serviceName: gitea
  selector:
    matchLabels:
      app.kubernetes.io/name: gitea
      app.kubernetes.io/instance: gitea
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gitea
        app.kubernetes.io/instance: gitea
    spec:
      serviceAccountName: gitea
      securityContext:
        {}
      containers:
        - name: gitea
          securityContext:
            {}
          image: "gitea/gitea:1.11.4"
          imagePullPolicy: IfNotPresent
          env:
            - name: "DB_TYPE"
              value: mysql
            - name: "DB_HOST"
              value: "mariadb.data-db:3306"
            - name: "DB_USER"
              valueFrom:
                secretKeyRef:
                  name: gitea
                  key: db-user
            - name: "DB_PASSWD"
              valueFrom:
                secretKeyRef:
                  name: gitea
                  key: db-password
            - name: "DB_NAME"
              value: giteadb
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          volumeMounts:
          - name: data
            mountPath: /var/repos
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: nfs-storage-dbdata
      resources:
        requests:
          storage: "20Gi"
---
# Source: gitea/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: gitea
  labels:
    helm.sh/chart: gitea-0.1.0
    app.kubernetes.io/name: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/version: "1.11.4"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    
    
    cert-manager.io/issuer: letsencyrpt-staging
    
  
spec:
  tls:
    - hosts:
        - "git.jhbutler.info"
      secretName: gittls
  rules:
    - host: "git.jhbutler.info"
      http:
        paths:
          - path: /
            backend:
              serviceName: gitea
              servicePort: 3000
---
# Source: gitea/templates/certmanagerIssuer.yaml
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    # The ACME server URL
    server: https://acme-v02.api.letsencrypt.org/directory
    # Email address used for ACME registration
    email: joel@jhbutler.info
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: letsencrypt-prod
    # Enable the HTTP-01 challenge provider
    solvers:
    - http01:
        ingress:
          class: nginx
---
# Source: gitea/templates/certmanagerIssuer.yaml
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    # The ACME server URL
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    # Email address used for ACME registration
    email: joel@jhbutler.info
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: letsencrypt-staging
    # Enable the HTTP-01 challenge provider
    solvers:
    - http01:
        ingress:
          class:  nginx

NOTES:
1. Get the application URL by running these commands:
  https://git.jhbutler.info/
