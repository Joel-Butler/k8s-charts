NAME: mongo
LAST DEPLOYED: Tue Apr 14 21:28:57 2020
NAMESPACE: data-db
STATUS: pending-install
REVISION: 1
HOOKS:
---
# Source: mongodb/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "mongo-mongodb-test-connection"
  labels:
    helm.sh/chart: mongodb-0.1.0
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongo
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['mongo-mongodb:27017']
  restartPolicy: Never
MANIFEST:
---
# Source: mongodb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mongo-mongodb
  labels:
    helm.sh/chart: mongodb-0.1.0
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongo
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: mongodb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mongo-mongodb
  labels:
    app: "mongodb"
    chart: "mongodb-0.1.0"
    release: "mongo"
    heritage: "Helm"
type: Opaque
data:
  mongodb-password: "elFjVE5vUlEwVQ=="
---
# Source: mongodb/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mongo-mongodb
  labels:
    helm.sh/chart: mongodb-0.1.0
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongo
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 27017
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongo
---
# Source: mongodb/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo-mongodb
  labels:
    helm.sh/chart: mongodb-0.1.0
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongo
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  serviceName: mongo-mongodb
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/instance: mongo
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
        app.kubernetes.io/instance: mongo
    spec:
      serviceAccountName: mongo-mongodb
      securityContext:
        {}
      containers:
        - name: mongodb
          securityContext:
            {}
          image: "arm64v8/mongo:1.16.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "mongoAdmin"
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-mongodb
                  key: mongodb-password
          ports:
            - name: mongodb
              containerPort: 27017
              protocol: TCP
          volumeMounts:
          - name: data
            mountPath: /data/db
          resources:
            {}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: nfs-storage-dbdata
      resources:
        requests:
          storage: "20Gi"

NOTES:
1. Get the application URL by running these commands:
  export POD_NAME=$(kubectl get pods --namespace data-db -l "app.kubernetes.io/name=mongodb,app.kubernetes.io/instance=mongo" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace data-db port-forward $POD_NAME 8080:80
